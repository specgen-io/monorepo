// Generated by ego.
// DO NOT EDIT

//line gents/response.ego:1
package gents

import
//line gents/response.ego:2

//line gents/response.ego:3
"fmt"
import "html"
import "io"
import "context"

import (
//line gents/response.ego:4

//line gents/response.ego:5
	"github.com/specgen-io/spec"

//line gents/response.ego:6
)

//line gents/response.ego:7

//line gents/response.ego:8

//line gents/response.ego:9
func generateIoTsResponse(operation *spec.NamedOperation, w io.Writer) {
//line gents/response.ego:11
	_, _ = io.WriteString(w, "\nexport type ")
//line gents/response.ego:11
	_, _ = fmt.Fprint(w, responseTypeName(operation))
//line gents/response.ego:11
	_, _ = io.WriteString(w, " =\n")
//line gents/response.ego:12
	for _, response := range operation.Responses {
//line gents/response.ego:13
		_, _ = io.WriteString(w, "    | { status: \"")
//line gents/response.ego:13
		_, _ = fmt.Fprint(w, response.Name.Source)
//line gents/response.ego:13
		_, _ = io.WriteString(w, "\"")
//line gents/response.ego:13
		if !response.Type.Definition.IsEmpty() {
//line gents/response.ego:13
			_, _ = io.WriteString(w, ", data: ")
//line gents/response.ego:13
			_, _ = fmt.Fprint(w, TsType(&response.Type.Definition))
//line gents/response.ego:13
		}
//line gents/response.ego:13
		_, _ = io.WriteString(w, " }\n")
//line gents/response.ego:14
	}
//line gents/response.ego:15
}

var _ fmt.Stringer
var _ io.Reader
var _ context.Context
var _ = html.EscapeString
