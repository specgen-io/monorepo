// Generated by ego.
// DO NOT EDIT

//line gents/axios.ego:1
package gents

import
//line gents/axios.ego:2

//line gents/axios.ego:3
"fmt"
import "html"
import "io"
import "context"

import (
//line gents/axios.ego:4

//line gents/axios.ego:5
	"github.com/specgen-io/spec"

	"strings" //line gents/axios.ego:6
//line gents/axios.ego:7
)

//line gents/axios.ego:8

//line gents/axios.ego:9

//line gents/axios.ego:10
func generateClientApiClass(api spec.Api, w io.Writer) {
//line gents/axios.ego:12
	_, _ = io.WriteString(w, "\nexport const ")
//line gents/axios.ego:12
	_, _ = fmt.Fprint(w, api.Name.CamelCase())
//line gents/axios.ego:12
	_, _ = io.WriteString(w, "Client = (axiosInstance: AxiosInstance) => {\n    return {\n        axiosInstance,\n")
//line gents/axios.ego:15
	for _, operation := range api.Operations {
//line gents/axios.ego:16
		generateOperation(&operation, w)
//line gents/axios.ego:17
	}
//line gents/axios.ego:18
	_, _ = io.WriteString(w, "    }\n}\n")
//line gents/axios.ego:20
}

//line gents/axios.ego:21

//line gents/axios.ego:22

//line gents/axios.ego:23
func generateOperation(operation *spec.NamedOperation, w io.Writer) {
//line gents/axios.ego:25
	_, _ = io.WriteString(w, "\n        ")
//line gents/axios.ego:25
	_, _ = fmt.Fprint(w, operation.Name.CamelCase())
//line gents/axios.ego:25
	_, _ = io.WriteString(w, ": async (")
//line gents/axios.ego:25
	_, _ = fmt.Fprint(w, createOperationParams(operation))
//line gents/axios.ego:25
	_, _ = io.WriteString(w, "): Promise<")
//line gents/axios.ego:25
	_, _ = fmt.Fprint(w, responseTypeName(operation))
//line gents/axios.ego:25
	_, _ = io.WriteString(w, "> => {\n")
//line gents/axios.ego:26
	body := operation.Body
//line gents/axios.ego:27
	hasQueryParams := len(operation.QueryParams) > 0
//line gents/axios.ego:28
	hasHeaderParams := len(operation.HeaderParams) > 0
//line gents/axios.ego:29
	if hasQueryParams {
//line gents/axios.ego:30
		_, _ = io.WriteString(w, "            const params = {\n")
//line gents/axios.ego:31
		for _, p := range operation.QueryParams {
//line gents/axios.ego:32
			_, _ = io.WriteString(w, "                \"")
//line gents/axios.ego:32
			_, _ = fmt.Fprint(w, p.Name.Source)
//line gents/axios.ego:32
			_, _ = io.WriteString(w, "\": parameters.")
//line gents/axios.ego:32
			_, _ = fmt.Fprint(w, p.Name.CamelCase())
//line gents/axios.ego:32
			_, _ = io.WriteString(w, ",\n")
//line gents/axios.ego:33
		}
//line gents/axios.ego:34
		_, _ = io.WriteString(w, "            }\n")
//line gents/axios.ego:35
	}
//line gents/axios.ego:36
	if hasHeaderParams {
//line gents/axios.ego:37
		_, _ = io.WriteString(w, "            const headers = {\n")
//line gents/axios.ego:38
		for _, p := range operation.HeaderParams {
//line gents/axios.ego:39
			_, _ = io.WriteString(w, "                \"")
//line gents/axios.ego:39
			_, _ = fmt.Fprint(w, p.Name.Source)
//line gents/axios.ego:39
			_, _ = io.WriteString(w, "\": parameters.")
//line gents/axios.ego:39
			_, _ = fmt.Fprint(w, p.Name.CamelCase())
//line gents/axios.ego:39
			_, _ = io.WriteString(w, ",\n")
//line gents/axios.ego:40
		}
//line gents/axios.ego:41
		_, _ = io.WriteString(w, "            }\n")
//line gents/axios.ego:42
	}
//line gents/axios.ego:43
	_, _ = io.WriteString(w, "            const config: AxiosRequestConfig = {")
//line gents/axios.ego:43
	if hasQueryParams {
//line gents/axios.ego:43
		_, _ = io.WriteString(w, "params: params,")
//line gents/axios.ego:43
	}
//line gents/axios.ego:43
	if hasHeaderParams {
//line gents/axios.ego:43
		_, _ = io.WriteString(w, "headers: headers,")
//line gents/axios.ego:43
	}
//line gents/axios.ego:43
	_, _ = io.WriteString(w, "}\n")
//line gents/axios.ego:44
	if body != nil {
//line gents/axios.ego:45
		_, _ = io.WriteString(w, "            const bodyJson = encode(")
//line gents/axios.ego:45
		_, _ = fmt.Fprint(w, IoTsType(&body.Type.Definition))
//line gents/axios.ego:45
		_, _ = io.WriteString(w, ", parameters.body)\n")
//line gents/axios.ego:46
	}
//line gents/axios.ego:47
	_, _ = io.WriteString(w, "            const response = await axiosInstance.")
//line gents/axios.ego:47
	_, _ = fmt.Fprint(w, strings.ToLower(operation.Endpoint.Method))
//line gents/axios.ego:47
	_, _ = io.WriteString(w, "(`")
//line gents/axios.ego:47
	_, _ = fmt.Fprint(w, getUrl(operation.Endpoint))
//line gents/axios.ego:47
	_, _ = io.WriteString(w, "`,")
//line gents/axios.ego:47
	if body != nil {
//line gents/axios.ego:47
		_, _ = io.WriteString(w, " bodyJson,")
//line gents/axios.ego:47
	}
//line gents/axios.ego:47
	_, _ = io.WriteString(w, " config)\n            switch (response.status) {\n")
//line gents/axios.ego:49
	for _, response := range operation.Responses {
//line gents/axios.ego:50
		_, _ = io.WriteString(w, "                case ")
//line gents/axios.ego:50
		_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(spec.HttpStatusCode(response.Name))))
//line gents/axios.ego:50
		_, _ = io.WriteString(w, ":\n                    return Promise.resolve({ status: \"")
//line gents/axios.ego:51
		_, _ = fmt.Fprint(w, response.Name.Source)
//line gents/axios.ego:51
		_, _ = io.WriteString(w, "\"")
//line gents/axios.ego:51
		if !response.Type.Definition.IsEmpty() {
//line gents/axios.ego:51
			_, _ = io.WriteString(w, ", data: decode(")
//line gents/axios.ego:51
			_, _ = fmt.Fprint(w, IoTsType(&response.Type.Definition))
//line gents/axios.ego:51
			_, _ = io.WriteString(w, ", response.data)")
//line gents/axios.ego:51
		}
//line gents/axios.ego:51
		_, _ = io.WriteString(w, " })\n")
//line gents/axios.ego:52
	}
//line gents/axios.ego:53
	_, _ = io.WriteString(w, "                default:\n                    throw new Error(`Unexpected status code ${ response.status }`)\n            }\n        },\n")
//line gents/axios.ego:57
}

//line gents/axios.ego:58

//line gents/axios.ego:59

//line gents/axios.ego:60
func generateClients(spec *spec.Spec, w io.Writer) {
//line gents/axios.ego:61
	_, _ = io.WriteString(w, "import { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { decode, encode } from './codec'\nimport {\n")
//line gents/axios.ego:64
	for _, model := range spec.Models {
//line gents/axios.ego:65
		_, _ = io.WriteString(w, "    ")
//line gents/axios.ego:65
		_, _ = fmt.Fprint(w, model.Name.PascalCase())
//line gents/axios.ego:65
		_, _ = io.WriteString(w, ",\n    T")
//line gents/axios.ego:66
		_, _ = fmt.Fprint(w, model.Name.PascalCase())
//line gents/axios.ego:66
		_, _ = io.WriteString(w, ",\n")
//line gents/axios.ego:67
	}
//line gents/axios.ego:68
	_, _ = io.WriteString(w, "} from './models';\n")
//line gents/axios.ego:69
	for _, api := range spec.Apis {
//line gents/axios.ego:70
		generateClientApiClass(api, w)
//line gents/axios.ego:71
		for _, operation := range api.Operations {
//line gents/axios.ego:72
			generateIoTsResponse(&operation, w)
//line gents/axios.ego:73
		}
//line gents/axios.ego:74
	}
//line gents/axios.ego:76
	_, _ = io.WriteString(w, "\nexport * from './models'\nexport { Errors } from 'io-ts'\nexport { DecodeError } from './codec'\n")
//line gents/axios.ego:79
}

var _ fmt.Stringer
var _ io.Reader
var _ context.Context
var _ = html.EscapeString
