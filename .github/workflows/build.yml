name: build

on: [push]

jobs:
  golang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with: { go-version: '1.18' }
      - uses: actions/checkout@v3
      - name: Build golang codegen
        run: |
          cd codegen/golang
          go build

  golang-models:
    needs: golang
    strategy:
      matrix:
        values-file: [strict, nonstrict]
    runs-on: ubuntu-latest
    env:
      RENDR_PATH: ./
    steps:
      - uses: actions/setup-go@v4
        with: { go-version: '1.18' }
      - uses: actions/checkout@v3
      - uses: ./.github/actions/set-env-vars
      - uses: ./.github/actions/install-specgen-golang
      - uses: ./.github/actions/get-rendr
        with:
          jfrog_pass: ${{ secrets.JFROG_PASS }}
          version: ${RENDR_TOOL_VERSION}
      - name: Render project
        run: ./rendr_test.sh models go ${{ matrix.values-file }} ${SPECGEN_VERSION} ./out
      - uses: ./.github/actions/yaml-execute
        with:
          path: ./out
          yaml-file: .rendr.yaml
          yaml-path: .build
      - uses: ./.github/actions/yaml-execute
        with:
          path: ./out
          yaml-file: .rendr.yaml
          yaml-path: .test

  golang-service-tests:
    needs: golang
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build-service-tests
        with:
          artifact-name: golang-service-tests

  golang-service:
    needs: golang-service-tests
    strategy:
      matrix:
        values-file: [vestigo-strict, chi-strict, httprouter-strict]
    runs-on: ubuntu-latest
    env:
      RENDR_PATH: ./
    steps:
      - uses: actions/setup-go@v4
        with: { go-version: '1.18' }
      - uses: actions/checkout@v3
      - uses: ./.github/actions/set-env-vars
      - uses: ./.github/actions/install-specgen-golang
      - uses: ./.github/actions/get-rendr
        with:
          jfrog_pass: ${{ secrets.JFROG_PASS }}
          version: ${RENDR_TOOL_VERSION}
      - name: Render project
        run: ./rendr_test.sh service go ${{ matrix.values-file }} ${SPECGEN_VERSION} ./out
      - uses: ./.github/actions/yaml-execute
        with:
          path: ./out
          yaml-file: .rendr.yaml
          yaml-path: .build
      - name: Start server
        run: |
          cd ./out
          go run server.go --port 8081 &
#      - uses: ./.github/actions/yaml-execute
#        with:
#          path: ./out
#          yaml-file: .rendr.yaml
#          yaml-path: .run
      - uses: ./.github/actions/wait-url
        with:
          url: http://localhost:8081/docs/
      - uses: actions/download-artifact@v3
        with:
          name: golang-service-tests
      - name: Debugging tests
        run: |
          echo "./test-services/tests/"
          ls -la ./test-services/tests/
          echo "."
          ls -la .
      - name: Run tests
        run: |
          chmod +x ./service-tests
          ./service-tests
#      - uses: ./.github/actions/run-go-tests
#        with:
#          command: ./service-tests -test.v
