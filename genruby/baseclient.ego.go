// Generated by ego.
// DO NOT EDIT

//line genruby/baseclient.ego:1
package genruby

import
//line genruby/baseclient.ego:2

//line genruby/baseclient.ego:3
"fmt"
import "html"
import "io"
import "context"

//line genruby/baseclient.ego:4

//line genruby/baseclient.ego:5

//line genruby/baseclient.ego:6

//line genruby/baseclient.ego:7

//line genruby/baseclient.ego:8
func generateBaseClient(w io.Writer, moduleName string) {
//line genruby/baseclient.ego:9
	_, _ = io.WriteString(w, "require \"net/http\"\nrequire \"net/https\"\nrequire \"uri\"\nrequire \"cgi\"\n\nrequire \"emery\"\n\nmodule ")
//line genruby/baseclient.ego:16
	_, _ = fmt.Fprint(w, moduleName)
//line genruby/baseclient.ego:17
	_, _ = io.WriteString(w, "\n  class BaseClient\n    attr_reader :uri\n    attr_reader :client\n\n    def initialize(base_uri)\n      @base_uri = T.check(URI, base_uri)\n      @client = Net::HTTP.new(@base_uri.host, @base_uri.port)\n      if @base_uri.scheme == \"https\"\n        @client.use_ssl = true\n        @client.verify_mode = OpenSSL::SSL::VERIFY_PEER\n        @client.cert_store = OpenSSL::X509::Store.new\n        @client.cert_store.set_default_paths\n      end\n    end\n  end\n\n  module Stringify\n    def Stringify.to_string(value)\n      if T.instance_of?(DateTime, value)\n        value.strftime('%Y-%m-%dT%H:%M:%S')\n      else\n        value.to_s\n      end\n    end\n  end\n\n  class StringParams\n    attr_reader :params\n\n    def initialize\n      @params = {}\n    end\n\n    def []= (param_name, value)\n      if value != nil\n        @params[param_name] = Stringify::to_string(value)\n      end\n    end\n\n    def set(param_name, typedef, value)\n      self[param_name] = T.check_var(param_name, typedef, value)\n    end\n\n    def query_str\n      parts = (@params || {}).map { |param_name, value| \"%s=%s\" % [param_name, CGI.escape(value)] }\n      parts.empty? ? \"\" : \"?\"+parts.join(\"&\")\n    end\n\n    def set_to_url(url)\n      @params.each do |param_name, value|\n        url = url.gsub(\"{#{param_name}}\", CGI.escape(value))\n      end\n      url\n    end\n  end\nend\n")
//line genruby/baseclient.ego:73
}

//line genruby/baseclient.ego:74

//line genruby/baseclient.ego:75

//line genruby/baseclient.ego:76
func generateClientRoot(w io.Writer, gemName string) {
//line genruby/baseclient.ego:77
	_, _ = io.WriteString(w, "require \"emery\"\nrequire \"")
//line genruby/baseclient.ego:78
	_, _ = fmt.Fprint(w, gemName)
//line genruby/baseclient.ego:78
	_, _ = io.WriteString(w, "/models\"\nrequire \"")
//line genruby/baseclient.ego:79
	_, _ = fmt.Fprint(w, gemName)
//line genruby/baseclient.ego:79
	_, _ = io.WriteString(w, "/baseclient\"\nrequire \"")
//line genruby/baseclient.ego:80
	_, _ = fmt.Fprint(w, gemName)
//line genruby/baseclient.ego:80
	_, _ = io.WriteString(w, "/client\"\n")
//line genruby/baseclient.ego:81
}

var _ fmt.Stringer
var _ io.Reader
var _ context.Context
var _ = html.EscapeString
