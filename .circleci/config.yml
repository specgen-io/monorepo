version: 2
jobs:
  build-specgen:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/specgen

    environment:
      TEST_RESULTS: /tmp/test-results
      VERSION_MAJOR: 0

    steps:
      - checkout
      - run:
          name: Build
          command: ./build.sh ${VERSION_MAJOR}.${CIRCLE_BUILD_NUM}
      - run:
          name: Unit tests
          command: |
            mkdir -p $TEST_RESULTS
            go get -u github.com/jstemmer/go-junit-report
            go test ./... -v 2>&1 | ../../bin/go-junit-report > ${TEST_RESULTS}/go-test-report.xml
      - store_artifacts:
          path: ./zips
          destination: zips
      - store_artifacts:
          path: ./dist
          destination: specgen
      - store_artifacts:
          path: /tmp/test-results
          destination: go-test-report
      - store_test_results:
          path: /tmp/test-results
      - persist_to_workspace:
          root: .
          paths:
            - dist
      - run:
          name: Release
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
              ./release.sh ${VERSION_MAJOR}.${CIRCLE_BUILD_NUM} ${GITHUB_TOKEN}
            else
              echo "Will not release - not running on master branch"
            fi
  build-gem-specgen:
    docker:
      - image: circleci/ruby:2.4.9
    steps:
      - checkout
      - attach_workspace:
          at: ./plugins/gem-specgen/lib
      - run:
          name: Check Base64
          command: echo -n '$JFROG_PASS' | base64
      - run:
          name: Check dist
          command: find .
      - run:
          name: Build gem
          command: |
            cd ./plugins/gem-specgen
            gem build specgen.gemspec

workflows:
  version: 2
  build-release:
    jobs:
      - build-specgen:
          context: github-release
      - build-gem-specgen:
          requires:
            - build-specgen