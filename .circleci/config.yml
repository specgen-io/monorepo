version: 2.1

jobs:
  build-specgen:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/specgen
    steps:
      - checkout
      - run:
          name: Build
          command: |
            export VERSION=0.<< pipeline.number >>.0
            ./build.sh $VERSION
      - run:
          name: Unit tests
          command: |
            mkdir -p $TEST_RESULTS
            go get -u github.com/jstemmer/go-junit-report
            go test ./... -v 2>&1 | ../../bin/go-junit-report > /tmp/test-results/go-test-report.xml
      - store_artifacts:
          path: ./zips
          destination: zips
      - store_artifacts:
          path: ./dist
          destination: specgen
      - store_artifacts:
          path: /tmp/test-results
          destination: go-test-report
      - store_test_results:
          path: /tmp/test-results
      - persist_to_workspace:
          root: .
          paths:
            - dist
      - run:
          name: Release
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
              export VERSION=0.<< pipeline.number >>.0
              ./release.sh $VERSION ${GITHUB_TOKEN}
            else
              echo "Will not release - not running on master branch"
            fi

  build-gem-specgen:
    docker:
      - image: circleci/ruby:2.4.9
    steps:
      - checkout
      - attach_workspace:
          at: ./plugins/gem-specgen/lib
      - run:
          name: Check Base64
          command: echo -n '$RUBYGEMS_API_KEY' | base64
      - run:
          name: Build gem
          command: |
            cd ./plugins/gem-specgen
            export VERSION=0.<< pipeline.number >>.0
            gem build specgen.gemspec
      - setup-rubygems_key
      - run:
          name: Push gem
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
              cd ./plugins/gem-specgen
              export VERSION=0.<< pipeline.number >>.0
              gem push --key rubygems specgen-$VERSION.gem
            else
              echo "Will not release - not running on master branch"
            fi

  build-sbt-specgen:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - attach_workspace:
          at: ./plugins/sbt-spec/src/main/resources
      - restore_cache:
          key: cache-{{ checksum "./plugins/sbt-spec/build.sbt" }}
      - run:
          name: Build aand publish SBT plugin
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
              cd ./plugins/sbt-spec
              export VERSION=0.<< pipeline.number >>.0
              sbt -Dversion=$VERSION clean test publish bintrayRelease
            else
              echo "Will not release - not running on master branch"
            fi
      - save_cache:
          key: cache-{{ checksum "./plugins/sbt-spec/build.sbt" }}
          paths:
            - ~/.sbt
            - ~/.ivy2
            - ~/.m2

commands:
  setup-rubygems_key:
    steps:
      - run:
          name: Write key
          command: |
            mkdir ~/.gem
            tee > ~/.gem/credentials \<<END
            ---
            :rubygems_api_key: $RUBYGEMS_API_KEY
            END
            chmod 600 ~/.gem/credentials

workflows:
  build-release:
    jobs:
      - build-specgen:
          context: github-release
      - build-gem-specgen:
          context: specgen
          requires:
            - build-specgen
      - build-sbt-specgen:
          context: bintray
          requires:
            - build-specgen
